# ASM3 example configuration file

# The base URL to the ASM installation as seen by the client (should not end with /)
base_url = {{ asm_base_url }}

# The URL to asm's service endpoint to be shown in online forms screen
# (typically base_url + /service)
service_url = {{ asm_base_url }}/service

# The language to use before a locale has been configured in the database
locale = en

# The timezone offset to use before one has been configured
# in the database (+/- server clock offset, NOT UTC)
timezone = {{ asm_sitedefs.timezone }}

# Where ASM directs log output to, one of:
# stderr  - the standard error stream
# syslog  - the UNIX syslogger (to LOCAL3 facility)
# ntevent - the Windows event logger
# <file>  - The path to a file to log to
log_location = {{ asm_sitedefs.log_location }}

# Include debug messages when logging - set to False
# to disable debug messages
log_debug = false

# Database info
db_type = {{ asm_db.type }}
db_host = {{ asm_db.host }}
db_port = {{ asm_db.port }}
db_username = {{ asm_db.user }}
db_password = {{ asm_db.pass }}
db_name = {{ asm_db.name }}

# Deployment type, wsgi or fcgi
deployment_type = wsgi

# Whether the session cookie should be secure (only valid for https)
session_secure_cookie = true

# Output debug info on sessions
session_debug = false

# The host/port that memcached is running on if it is to be used.
# If memcache is not available, an in memory dictionary will be
# used instead.
memcached_server = 127.0.0.1:11211

# Where to store media files.
# database - media files are base64 encoded in the dbfs.content db column
# file - media files are stored in a folder
dbfs_store = {{ asm_sitedefs.dbfs_store }}

# dbfs_store = file: The folder where media files are stored.
# It must exist and ASM must have write permissions. It should never end with a /
dbfs_filestorage_folder = {{ asm_data }}/media

# The directory to use to cache elements on disk. Must already exist
# as the application will not attempt to create it.
disk_cache = {{ asm_data }}/cache

# Cache results of the most common, less important queries for
# a short period (60 seconds) in the disk cache to help performance.
# These queries include shelterview animals and main screen links)
cache_common_queries = false

# Cache service call responses on the server side according
# to their max-age headers in the disk cache
cache_service_responses = false

# If email_errors is set to true, all errors from the site
# are emailed to ADMIN_EMAIL and the user is given a generic
# error page. If set to False, debug information is output.
email_errors = false
admin_email = {{ asm_sitedefs.admin_email }}

# If minify_js is set to true, minified versions of the javascript
# files will be generated at build/deploy time and the handler
# in html.py will reference them instead
minify_js = false

# If rollup_js is set to true, all javascript files will be rolled
# up into a single file before sending to the client (combine
# with MINIFY_JS for smallest payload in a single request)
rollup_js = false

# Target for viewing an address on a map, {0} is the address
map_link = https://www.openstreetmap.org/search?query={0}

# Map provider for rendering maps on the client, can be "osm" or "google"
map_provider = {{ asm_sitedefs.map_provider }}
map_provider_key = {{ asm_sitedefs.map_provider_key }}
osm_map_tiles = https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png

# Geocode provider to use - nominatim or google
geo_provider = {{ asm_sitedefs.geo_provider }}
geo_provider_key = {{ asm_sitedefs.geo_provider_key }}
geo_batch = true
geo_limit = 100
geo_lookup_timeout = 5
geo_sleep_after = 1

# smtp_server = { "sendmail": false, "host": "mail.yourdomain.com", "port": 25, "username": "userifauth", "password": "passifauth", "usetls": false }
# smtp_server = { "sendmail": false, "host": "mail.yourdomain.com", "port": 25, "username": "", "password": "", "usetls": false }
smtp_server = { "sendmail": false, "host": "{{ asm_smtp.host }}", "port": {{ asm_smtp.port }}, "username": "{{ asm_smtp.user }}", "password": "{{ asm_smtp.pass }}", "usetls": {{ asm_smtp.tls }} }

# The from address for all outgoing emails. The email address configured
# in the database will be used as the Reply-To header to avoid
# any issues with DKIM/SPF/DMARC spoofing
# substitutions:
# {organisation} organisation name
# {database} database name
# {alias} database alias
from_address = {{ asm_sitedefs.admin_email }}

petlink_base_url = {{ asm_sitedefs.petlink_base_url }}
