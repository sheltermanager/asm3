ASPCA Ride Report
###
Transport
###
34202/PostgreSQL rev03
###
Export to CSV for values you can copy into the ASPCA Ride spreadsheet
###
en
###
$VAR ref STRING Enter the transport reference$

$CONST VACC1='Vanguard%'$
$CONST VACC2='Spectra%'$
$CONST VACC3='D%PP%'$
$CONST VACC4='FV%'$
$CONST VACC5='FV%'$
$CONST BORDETELLA='Bord%'$
$CONST LEPTO='Lepto%'$
$CONST RABIES='Rabies%'$
$CONST HW1='Revolution%'$
$CONST HW2='Interceptor%'$
$CONST HW3='Sentinel%'$
$CONST HW4='%eartworm%'$
$CONST HW5='%HW%'$
$CONST FLEA1='Nexgard%'$
$CONST FLEA2='%Flea%'$
$CONST FLEA3='%Bravecto%'$
$CONST FLEA4='%Tick%'$
$CONST FLEA5='%Tick%'$
$CONST WORM1='Strongid%'$
$CONST WORM2='Panacur%'$
$CONST WORM3='Pyrantel%'$
$CONST WORM4='%worm%'$
$CONST WORM5='%worm%'$
$CONST OTHERW1='Marqui%'$
$CONST OTHERW2='Drontal%'$
$CONST OTHERW3='Ponazuril%'$
$CONST OTHERW4='Drontal%'$
$CONST OTHERW5='Drontal%'$
$CONST DOXY='Doxy%'$
$CONST FVTEST1='FIV%'$
$CONST FVTEST2='FLV%'$
$CONST FVTEST2='FeLV%'$
$CONST DEMODEX='Demodex%'$
$CONST FECAL1='Fecal%'$
$CONST FECAL2='Faecal%'$

SELECT 
ShelterCode AS "Animal ID",
AnimalName AS "Animal Name",
SpeciesName AS "Animal Type",
BreedName AS "Primary Breed",

$SQL DATEDIFF t.PickupDateTime,a.DateOfBirth$ / 365 AS "Age In Years",
MOD($SQL DATEDIFF t.PickupDateTime,a.DateOfBirth$ / 30, 12) AS "Age In Months",
MOD($SQL DATEDIFF t.PickupDateTime,a.DateOfBirth$, 30) / 7 AS "Age In Weeks",

CASE 
WHEN a.Sex = 0 AND a.Neutered=0 THEN 'Female'
WHEN a.Sex = 0 AND a.Neutered=1 THEN 'Female Spayed'
WHEN a.Sex = 1 AND a.Neutered=0 THEN 'Male'
WHEN a.Sex = 1 AND a.Neutered=1 THEN 'Male Neutered'
ELSE '' END AS Sex,

a.Weight,
CASE
WHEN e.ReasonName LIKE '%Allergies%' THEN 'Allergies'
WHEN e.ReasonName LIKE '%Boarding%' THEN 'Boarding'
WHEN e.ReasonName LIKE '%Born %' THEN 'Born In Care'
WHEN e.ReasonName LIKE '%Clinic%' THEN 'Clinic'
WHEN e.ReasonName LIKE '%Boarding%' THEN 'Emergency Boarding'
WHEN (e.ReasonName LIKE '%Surrender%' OR e.ReasonName LIKE 'OS%') THEN 'Owner/Guardian Surrender'
WHEN e.ReasonName LIKE '%Return%' THEN 'Return'
WHEN e.ReasonName LIKE '%Seized%' THEN 'Seized'
WHEN e.ReasonName LIKE '%Sick/Injured%' THEN 'Sick/Injured'
WHEN e.ReasonName LIKE '%Stray%' THEN 'Stray'
WHEN e.ReasonName LIKE '%Too Many Animals%' THEN 'Too Many Animals'
WHEN e.ReasonName LIKE '%Transfer%' THEN 'Transfer'
WHEN e.ReasonName LIKE '%Afford%' THEN 'Unable to Afford'
WHEN e.ReasonName LIKE '%Cope%' THEN 'Unable to Cope'
WHEN e.ReasonName LIKE '%Unsuitable%' THEN 'Unsuitable Accomodation'
WHEN e.ReasonName LIKE '%Wildlife%' THEN 'Wildlife'
ELSE 'Unknown'
END AS "Intake Type",
a.DateBroughtIn AS "Intake Date",
c.BaseColour AS "Primary Color",

(SELECT string_agg(vt.VaccinationType ||' '|| to_char(DateOfVaccination, 'MM/DD/YYYY'), ', ' ORDER BY DateOfVaccination)
    FROM animalvaccination av INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID
    WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND (vt.VaccinationType LIKE $VACC1$ OR vt.VaccinationType LIKE $VACC2$
	OR vt.VaccinationType LIKE $VACC3$ OR vt.VaccinationType LIKE $VACC4$ OR vt.VaccinationType LIKE $VACC5$)) AS "DistParvDtGiven",
                                            
(SELECT MIN(av.DateOfVaccination) FROM animalvaccination av INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $BORDETELLA$ LIMIT 1) AS "Bordetella Date Given",

(SELECT MIN(av.DateOfVaccination) FROM animalvaccination av INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $LEPTO$ LIMIT 1) AS "Leptospirosis Date Given",

(SELECT MIN(av.DateOfVaccination) FROM animalvaccination av INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $RABIES$ LIMIT 1) AS "Rabies Date Given",

CASE 
WHEN a.SpeciesID=1 THEN 'OBS' 
ELSE '' END AS "Behavior Assessment Type",

CASE 
WHEN a.SpeciesID=1 AND a.HeartwormTested=1 AND a.HeartwormTestResult=1 THEN 'Negative'
WHEN a.SpeciesID=1 AND a.HeartwormTested=1 AND a.HeartwormTestResult=2 THEN 'Positive'
ELSE '' END AS "Heartworm Test Status",

CASE 
WHEN a.SpeciesID=2 AND a.CombiTested=1 AND a.CombiTestResult=1 THEN 'Negative'
WHEN a.SpeciesID=2 AND a.CombiTested=1 AND a.CombiTestResult=2 THEN 'Positive'
ELSE '' END AS "FIV Status",

CASE 
WHEN a.SpeciesID=2 AND a.CombiTested=1 AND a.FLVResult=1 THEN 'Negative'
WHEN a.SpeciesID=2 AND a.CombiTested=1 AND a.FLVResult=2 THEN 'Positive'
ELSE '' END AS "FELV Status",

CASE
WHEN a.SpeciesID=1 THEN a.HeartwormTestDate
WHEN a.SpeciesID=2 THEN a.CombiTestDate
ELSE NULL END AS "Heartworm or FIV or FeLV Test Date",

(SELECT string_agg(am.TreatmentName ||' '|| to_char(mt.DateGiven, 'MM/DD/YYYY'), ', ' ORDER BY DateGiven)
    FROM animalmedical am INNER JOIN animalmedicaltreatment mt ON mt.AnimalMedicalID = am.ID
    WHERE DateGiven Is Not Null AND am.AnimalID = a.ID AND (TreatmentName LIKE $HW1$ OR TreatmentName LIKE $HW2$ OR TreatmentName LIKE $HW3$
	OR TreatmentName LIKE $HW4$ OR TreatmentName LIKE $HW5$)) AS "Heartworm Preventive Products and Date Given",

a.IdentichipNumber AS "Microchip Number",

(SELECT string_agg(am.TreatmentName ||' '|| to_char(mt.DateGiven, 'MM/DD/YYYY'), ', ' ORDER BY DateGiven)
    FROM animalmedical am INNER JOIN animalmedicaltreatment mt ON mt.AnimalMedicalID = am.ID
    WHERE DateGiven Is Not Null AND am.AnimalID = a.ID AND (TreatmentName LIKE $FLEA1$ OR TreatmentName LIKE $FLEA2$ OR TreatmentName LIKE $FLEA3$
	OR TreatmentName LIKE $FLEA4$ OR TreatmentName LIKE $FLEA5$)) AS "External Parasite Preventive Products and Date Given",

(SELECT string_agg(am.TreatmentName ||' '|| to_char(mt.DateGiven, 'MM/DD/YYYY'), ', ' ORDER BY DateGiven)
    FROM animalmedical am INNER JOIN animalmedicaltreatment mt ON mt.AnimalMedicalID = am.ID
    WHERE DateGiven Is Not Null AND am.AnimalID = a.ID AND (TreatmentName LIKE $WORM1$ OR TreatmentName LIKE $WORM2$ OR TreatmentName LIKE $WORM3$ 
    OR TreatmentName LIKE $WORM4$ OR TreatmentName LIKE $WORM5$)) AS "Dewormer Products and Date Given",
    
(SELECT string_agg(am.TreatmentName ||' '|| to_char(mt.DateGiven, 'MM/DD/YYYY'), ', ' ORDER BY DateGiven)
    FROM animalmedical am INNER JOIN animalmedicaltreatment mt ON mt.AnimalMedicalID = am.ID
    WHERE DateGiven Is Not Null AND am.AnimalID = a.ID AND (TreatmentName LIKE $OTHERW1$ OR TreatmentName LIKE $OTHERW2$ OR TreatmentName LIKE $OTHERW3$ 
    OR TreatmentName LIKE $OTHERW4$ OR TreatmentName LIKE $OTHERW5$) ) AS "Other Parasite Treatment Product and Date Given",

$SQL DATETOCHAR CURRENT_DATE,MM/DD/YYYY$ AS "Health Cert or CVI Date",

a.HealthProblems AS "Medical Notes",
t.PickUpAddress AS "Location",
c.BaseColour AS "Secondary Color",

'https://service.sheltermanager.com/asmservice?account=$DATABASENAME$&method=animal_image&animalid=' || a.ID::varchar AS "Photos or Videos",

(SELECT VaccinationType FROM vaccinationtype vt INNER JOIN animalvaccination av ON av.VaccinationID = vt.ID 
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $BORDETELLA$ 
 	ORDER BY DateOfVaccination DESC LIMIT 1) AS "Bordetella Product",
 
(SELECT string_agg(TO_CHAR(DateOfVaccination,'MM/DD/YYYY'), ', ' ORDER BY DateOfVaccination) FROM animalvaccination av
    INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID 
    WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID 
 	AND vt.VaccinationType LIKE $BORDETELLA$) AS "Bordetella Booster Date Given",
 
(SELECT VaccinationType FROM vaccinationtype vt INNER JOIN animalvaccination av ON av.VaccinationID = vt.ID 
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $RABIES$ 
 	ORDER BY DateOfVaccination DESC LIMIT 1) AS "Rabies Product",

(SELECT string_agg(TO_CHAR(DateOfVaccination,'MM/DD/YYYY'), ', ' ORDER BY DateOfVaccination) FROM animalvaccination av
    INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID 
    WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID 
 	AND vt.VaccinationType LIKE $RABIES$) AS "Rabies Booster Date Given",
    
(SELECT VaccinationType FROM vaccinationtype vt INNER JOIN animalvaccination av ON av.VaccinationID = vt.ID 
	WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID AND vt.VaccinationType LIKE $LEPTO$ 
 	ORDER BY DateOfVaccination DESC LIMIT 1) AS "Leptospirosis Product", 
    
(SELECT string_agg(TO_CHAR(DateOfVaccination,'MM/DD/YYYY'), ', ' ORDER BY DateOfVaccination) FROM animalvaccination av
    INNER JOIN vaccinationtype vt ON vt.ID = av.VaccinationID 
    WHERE DateOfVaccination Is Not Null AND av.AnimalID = a.ID 
 	AND vt.VaccinationType LIKE $LEPTO$) AS "Leptospirosis Booster Date Given", 
    
(SELECT string_agg(TreatmentName,', 'ORDER BY DateGiven) FROM animalmedical am INNER JOIN animalmedicaltreatment amt ON amt.AnimalMedicalID = am.ID    
 	WHERE amt.DateGiven Is Not Null AND am.AnimalID = a.ID AND am.TreatmentName LIKE $DOXY$ 
 	AND a.HeartwormTestResult=2) AS "Doxycycline Product Name", 
    
 (SELECT string_agg(TO_CHAR(DateGiven,'MM/DD/YYYY'),', ' ORDER BY DateGiven) FROM animalmedicaltreatment amt 
	INNER JOIN animalmedical am ON am.ID = amt.AnimalMedicalID
  	WHERE DateGiven Is Not Null AND am.AnimalID = a.ID 
  	AND a.HeartwormTestResult=2 AND am.TreatmentName LIKE $DOXY$) AS "Doxycycline Start Date",
 
(SELECT string_agg(TO_CHAR(DateOfTest, 'MM/DD/YYYY'),', ' ORDER BY DateOfTest) FROM animaltest v
    INNER JOIN testtype tt ON tt.id=v.testtypeid
    WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND (tt.TestName LIKE $FVTEST1$ OR tt.TestName LIKE $FVTEST2$ OR tt.TestName LIKE $FVTEST2$)) AS "FeLV FIV Combo Test Date",
    
(SELECT string_agg(ResultName,', 'ORDER BY DateOfTest) FROM testresult tr
   	INNER JOIN animaltest v ON v.testresultid = tr.id
 	INNER JOIN testtype tt ON tt.id = v.TestTypeID
   	WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND (tt.TestName LIKE $FVTEST1$ OR tt.TestName LIKE $FVTEST2$ OR tt.TestName LIKE $FVTEST2$)) AS "FeLV FIV Combo Status",  
    
(SELECT string_agg(TO_CHAR(DateOfTest, 'MM/DD/YYYY'),', ' ORDER BY DateOfTest) FROM animaltest v
    INNER JOIN testtype tt ON tt.id=v.testtypeid
    WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND tt.TestName LIKE $DEMODEX$) AS "Demodex Test Date",
    
(SELECT string_agg(ResultName,', 'ORDER BY DateOfTest) FROM testresult tr
   	INNER JOIN animaltest v ON v.testresultid = tr.id
 	INNER JOIN testtype tt ON tt.id = v.TestTypeID
   	WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND tt.TestName LIKE $DEMODEX$) AS "Demodex Test Status",  
    
(SELECT string_agg(TO_CHAR(DateOfTest, 'MM/DD/YYYY'),', ' ORDER BY DateOfTest) FROM animaltest v
    INNER JOIN testtype tt ON tt.id=v.testtypeid
    WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND (tt.TestName LIKE $FECAL1$ OR tt.TestName LIKE $FECAL2$ OR tt.TestName LIKE $FVTEST2$)) AS "Fecal Test Date",
    
(SELECT string_agg(ResultName,', 'ORDER BY DateOfTest) FROM testresult tr
   	INNER JOIN animaltest v ON v.testresultid = tr.id
 	INNER JOIN testtype tt ON tt.id = v.TestTypeID
   	WHERE DateOfTest Is Not Null AND v.AnimalID = a.ID 
 	AND (tt.TestName LIKE $FECAL1$ OR tt.TestName LIKE $FECAL2$ OR tt.TestName LIKE $FVTEST2$)) AS "Fecal Test Status", 
    
'' AS "Behavior Assessment Date Performed", 
'' AS "Upload Behavior Assessment File",
'' AS "History of Biting",
'' AS "History of Aggression or Reactivity",
'' AS "Aggressive or Reactive Towards",
'' AS "Please Specify Other Animals",
'' AS "Has a Contagious Illness",
'' AS "Needs Routine Dental Cleanings",
'' AS "Has Extensive Dental Issues", 
'' AS "Currently Pregnant",
'' AS "Currently Nursing",
'' AS "Upload Medical Document",
'' AS "Medication Name",
'' AS "Medication Dosage", 
'' AS "Medication How Often",
'' AS "Medication What Is It Given For",
'' AS "Medication Date Started",
'' AS "Medication Projected Date of Completion or Unknown",
t.Comments AS "General Notes",
'DISTPARVDTGIVEN=Distemper Parvo Hepatitis Adenovirus or FVRCP Products and Dates Given' AS RenameHeader
                                          
FROM animaltransport t
INNER JOIN animal a ON a.ID = t.AnimalID
INNER JOIN basecolour c ON c.ID = a.BaseColourID 
INNER JOIN entryreason e ON e.ID = a.EntryReasonID 
INNER JOIN species s ON s.ID = a.SpeciesID 
WHERE t.TransportReference = '$@ref$'
ORDER BY a.Weight
###
$$HEADER
HEADER$$

$$BODY
BODY$$

$$FOOTER
<p>This report should be run from <a href="report_export">Settings-&gt;Export Reports as CSV</a> to produce a spreadsheet file for copying and pasting from.</p>
FOOTER$$