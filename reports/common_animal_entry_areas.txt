Common Animal Entry Areas
###
Statistics
###
MySQL rev02
###
The most common areas which animals enter the shelter from.
###
en
###
SELECT DISTINCT
CASE WHEN LOCATE(' ', o.OwnerPostcode) > 1 
THEN LEFT(o.OwnerPostcode, LOCATE(' ', o.OwnerPostcode))
ELSE o.OwnerPostcode END AS Postcode,
COUNT(CASE WHEN LOCATE(' ', o.OwnerPostcode) > 1 
THEN LEFT(o.OwnerPostcode, LOCATE(' ', o.OwnerPostcode))
ELSE o.OwnerPostcode END) AS Total
FROM animal a
INNER JOIN owner o ON o.ID = a.OriginalOwnerID
WHERE NonShelterAnimal = 0 and a.DateBroughtIn >= '$ASK DATE Entered between$' AND a.DateBroughtIn <= '$ASK DATE and$' 
GROUP BY 
CASE WHEN LOCATE(' ', o.OwnerPostcode) > 1 
THEN LEFT(o.OwnerPostcode, LOCATE(' ', o.OwnerPostcode))
ELSE o.OwnerPostcode END
HAVING Total > 1
ORDER BY Total DESC
###
$$HEADER
<table border="1">
<tr>
<th>Area</th>
<th>Total</th>
</tr>
HEADER$$

$$BODY
<tr>
<td>$POSTCODE</td>
<td>$TOTAL</td>
</tr>
BODY$$

$$FOOTER
</table>
FOOTER$$

&&&
Common Animal Entry Areas
###
Statistics
###
PostgreSQL rev02
###
The most common areas which animals enter the shelter from.
###
en
###
SELECT DISTINCT
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END AS Postcode,
COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) AS Total
FROM animal a
INNER JOIN owner o ON o.ID = a.OriginalOwnerID
WHERE NonShelterAnimal = 0 and a.DateBroughtIn >= '$ASK DATE Entered between$' AND a.DateBroughtIn <= '$ASK DATE and$' 
GROUP BY 
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END
HAVING COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) > 1
ORDER BY Total DESC
###
$$HEADER
<table border="1">
<tr>
<th>Area</th>
<th>Total</th>
</tr>
HEADER$$

$$BODY
<tr>
<td>$POSTCODE</td>
<td>$TOTAL</td>
</tr>
BODY$$

$$FOOTER
</table>
FOOTER$$

&&&
Common Animal Entry Areas by Type
###
Statistics
###
PostgreSQL rev01
###
The most common areas which animals enter the shelter from, split by type.
###
en
###
SELECT DISTINCT
t.AnimalType,
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END AS Postcode,
COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) AS Total
FROM animal a
INNER JOIN animaltype t ON t.ID = a.AnimalTypeID 
INNER JOIN owner o ON o.ID = a.OriginalOwnerID
WHERE NonShelterAnimal = 0 and a.DateBroughtIn >= '$ASK DATE Entered between$' AND a.DateBroughtIn <= '$ASK DATE and$' 
GROUP BY 
t.AnimalType, 
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END
HAVING COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) > 1
ORDER BY Total DESC
###
$$HEADER
<table border="1">
<tr>
<th>Type</th>
<th>Area</th>
<th>Total</th>
</tr>
HEADER$$

$$BODY
<tr>
<td>$ANIMALTYPE</td>
<td>$POSTCODE</td>
<td>$TOTAL</td>
</tr>
BODY$$

$$FOOTER
</table>
FOOTER$$

&&&
Common Animal Entry Areas by Species
###
Statistics
###
PostgreSQL rev01
###
The most common areas which animals enter the shelter from, split by species.
###
en
###
SELECT DISTINCT
s.SpeciesName, 
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END AS Postcode,
COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) AS Total
FROM animal a
INNER JOIN species s ON s.ID = a.SpeciesID 
INNER JOIN owner o ON o.ID = a.OriginalOwnerID
WHERE NonShelterAnimal = 0 and a.DateBroughtIn >= '$ASK DATE Entered between$' AND a.DateBroughtIn <= '$ASK DATE and$' 
GROUP BY 
s.SpeciesName,
CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END
HAVING COUNT(CASE WHEN position(' ' in o.OwnerPostcode) > 1 
THEN substring(o.OwnerPostcode from 0 for position(' ' in o.OwnerPostcode))
ELSE o.OwnerPostcode END) > 1
ORDER BY Total DESC
###
$$HEADER
<table border="1">
<tr>
<th>Species</th>
<th>Area</th>
<th>Total</th>
</tr>
HEADER$$

$$BODY
<tr>
<td>$SPECIESNAME</td>
<td>$POSTCODE</td>
<td>$TOTAL</td>
</tr>
BODY$$

$$FOOTER
</table>
FOOTER$$
